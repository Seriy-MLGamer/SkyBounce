//"MLG user interface" library v1.0.0.
//(C) Серый MLGamer, 2021.
//MIT license.


THEME_LIGHT=0
THEME_DARK=1
COLOR_THEME=THEME_DARK
BUTTON_STANDARD=0
BUTTON_SWITCH=1
BUTTON_SELECT=2
WINDOW_STANDARD=0
WINDOW_DIALOGUE=1
WINDOW_ALERT=2
WINDOW_FLAG_DRAGGABLE=0b1
WINDOW_FLAG_RESIZEABLE=0b10
WINDOW_FLAG_NOTITLE=0b100

fn new_window($title, $x, $y, $width, $height, $type, $flags)
{
	$window=new()
	$window.class="window"

	$window.x=$x
	$window.y=$y
	$window.width=$width
	$window.height=$height
	$window.type=$type
	$window.flags=$flags

	$window.align=0
	$window.color=#00FFFF
	$window.texts=new(1, 1, INT)
	$window.texts[0]=new_text($title, 4, -37, $width-12, 4)
	$window.texts[0].parent=$window
	$window.texts[0].align=TOP|LEFT
	$window.texts[0].text_align=TOP|LEFT
	$window.images=new(1, 1, INT)
	clean($window.images, -1)
	$window.buttons=new(1, 1, INT)
	clean($window.buttons, -1)
	if $type==WINDOW_DIALOGUE
	{
		$ok=new_button("OK", -110, -60, 100, 50, BUTTON_STANDARD)
		if 0//strstr(LANG_NAME, "ru_RU")==0
		{
			$cancel=new_button("Отмена", -220, -60, 100, 50, BUTTON_STANDARD)
		}
		else
		{
			$cancel=new_button("Cancel", -220, -60, 100, 50, BUTTON_STANDARD)
		}
		$ok.align=RIGHT|BOTTOM
		$cancel.align=RIGHT|BOTTOM
		set_button_callback($ok, {ret(1)}, 0)
		set_button_callback($cancel, {ret(0)}, 0)
		bind_button($ok, $window)
		bind_button($cancel, $window)
	}
	else{if $type==WINDOW_ALERT
	{
		$ok=new_button("OK", -110, -60, 100, 50, BUTTON_STANDARD)
		$ok.align=RIGHT|BOTTOM
		bind_button($ok, $window)
	}}
	ret($window)
}
fn remove_window($window)
{
	if $window>=0
	{
		remove_text($window.texts[0])
		if $window.type==WINDOW_DIALOGUE
		{
			remove_button($window.buttons[0])
			remove_button($window.buttons[1])
		}
		else{if $window.type==WINDOW_ALERT
		{
			remove_button($window.buttons[0])
		}}
		remove($window.texts)
		remove($window.images)
		remove($window.buttons)
		remove($window)
	}
}
fn new_text($string, $x, $y, $width, $size)
{
	$text=new()
	$text.class="text"

	$text.string=$string
	$text.x=$x
	$text.y=$y
	$text.width=$width
	$text.size=$size

	$text.align=0
	$text.text_align=0
	if COLOR_THEME==THEME_DARK
	{
		$text.color=#FFFFFF
	}
	else{if COLOR_THEME==THEME_LIGHT
	{
		$text.color=#000000
	}}
	$text.parent=-1
	ret($text)
}
fn remove_text($text)
{
	if $text>=0
	{
		if $text.parent>=0
		{
			unbind_text($text, $text.parent)
		}
		remove($text)
	}
}
fn new_button($title, $x, $y, $width, $height, $type)
{
	$button=new()
	$button.class="button"

	$button.title=new_text($title, 0, 0, $width-2, 2)
	$button.title.parent=$button
	$button.x=$x
	$button.y=$y
	$button.width=$width
	$button.height=$height

	$button.align=0
	$button.window=-1
	$button.type=$type
	$button.color=#00FFFF
	$button.active=1
	$button.entered=0
	$button.pressed=0
	if $type==BUTTON_SWITCH
	{
		$button.switch_state=0
	}
	else{if $type==BUTTON_SELECT
	{
		$button.selected=0
	}}
	if !MOBILE
	{
		$button.mouse_key=KEY_MOUSE_LEFT
		$button.keyboard_key=0
	}
	$button.main_event=EVT_BUTTONUP
	$button.function=0
	$button.arguments=0
	ret($button)
}
fn remove_button($button)
{
	if $button>=0
	{
		remove($button.title)
		if $button.window>=0
		{
			unbind_button($button, $button.window)
		}
		remove($button)
	}
}
fn bind_text($text, $window)
{
	if $window>=0&&$text>=0
	{
		$text.parent=$window
		$a=0 while $a!=get_size($window.texts)&&$window.texts[$a]>=0
		{
			$a+1
		}
		if $a==get_size($window.texts)
		{
			resize($window.texts, get_size($window.texts)+1)
		}
		$window.texts[$a]=$text
	}
}
fn unbind_text($text, $window)
{
	if $window>=0&&$text>=0&&strcmp($window.class, "window")==0
	{
		$a=0 while $a!=get_size($window.texts)&&$window.texts[$a]==$text
		{
			$a+1
		}
		if $a!=get_size($window.texts)
		{
			$window.texts[$a]=-1
		}
		$text.parent=-1
	}
}
fn bind_button($button, $window)
{
	if $window>=0&&$button>=0
	{
		$button.window=$window
		$a=0 while $a!=get_size($window.buttons)&&$window.buttons[$a]>=0
		{
			$a+1
		}
		if $a==get_size($window.buttons)
		{
			resize($window.buttons, get_size($window.buttons)+1)
		}
		$window.buttons[$a]=$button
	}
}
fn unbind_button($button, $window)
{
	if $window>=0&&$button>=0
	{
		$a=0 while $a!=get_size($window.buttons)&&$window.buttons[$a]==$button
		{
			$a+1
		}
		if $a!=get_size($window.buttons)
		{
			$window.buttons[$a]=-1
		}
		$button.parent=-1
	}
}
fn set_button_callback($button, $function, $arguments)
{
	if $button>=0
	{
		$button.function=$function
		$button.arguments=$arguments
	}
}
fn get_global_x($object)
{
	$x=$object.x
	if strcmp($object.class, "button")==0
	{
		if $object.window>=0
		{
			$x+get_global_x($object.window)
			$x+1+($object.window.width-2)div 2
			if $object.align&LEFT
			{
				$x-($object.window.width-2)div 2
			}
			if $object.align&RIGHT
			{
				$x+($object.window.width-2)div 2
			}
		}
		else
		{
			if $object.align&LEFT
			{
				$x-WINDOW_XSIZE div 2
			}
			if $object.align&RIGHT
			{
				$x+WINDOW_XSIZE div 2
			}
		}
	}
	else{if strcmp($object.class, "text")==0
	{
		if $object.parent>=0
		{
			$x+get_global_x($object.parent)
			$x+1+($object.parent.width-2)div 2
			if $object.align&LEFT
			{
				$x-($object.parent.width-2)div 2
			}
			if $object.align&RIGHT
			{
				$x+($object.parent.width-2)div 2
			}
		}
		else
		{
			if $object.align&LEFT
			{
				$x-WINDOW_XSIZE div 2
			}
			if $object.align&RIGHT
			{
				$x+WINDOW_XSIZE div 2
			}
		}
	}
	else{if strcmp($object.class, "window")==0
	{
		if $object.window.align&LEFT
		{
			$x-WINDOW_XSIZE div 2
		}
		if $object.window.align&RIGHT
		{
			$x+WINDOW_XSIZE div 2
		}
	}}}
	ret($x)
}
fn get_global_y($object)
{
	$y=$object.y
	if strcmp($object.class, "button")==0
	{
		if $object.window>=0
		{
			$y+get_global_y($object.window)
			$y+42+($object.window.height-43)div 2
			if $object.align&TOP
			{
				$y-($object.window.height-43)div 2
			}
			if $object.align&BOTTOM
			{
				$y+($object.window.height-43)div 2
			}
		}
		else
		{
			if $object.align&TOP
			{
				$y-WINDOW_YSIZE div 2
			}
			if $object.align&BOTTOM
			{
				$y+WINDOW_YSIZE div 2
			}
		}
	}
	else{if strcmp($object.class, "text")==0
	{
		if $object.parent>=0
		{
			$y+get_global_y($object.parent)
			if strcmp($object.parent.class, "button")==0
			{
				$y+1+($object.parent.height-2)div 2
				if $object.align&TOP
				{
					$y-($object.parent.height-2)div 2
				}
				if $object.align&BOTTOM
				{
					$y+($object.parent.height-2)div 2
				}
			}
			else{if strcmp($object.parent.class, "window")==0
			{
				$y+42+($object.parent.height-43)div 2
				if $object.align&TOP
				{
					$y-($object.parent.height-43)div 2
				}
				if $object.align&BOTTOM
				{
					$y+($object.parent.height-43)div 2
				}
			}}
		}
		else
		{
			if $object.align&TOP
			{
				$y-WINDOW_YSIZE div 2
			}
			if $object.align&BOTTOM
			{
				$y+WINDOW_YSIZE div 2
			}
		}
	}
	else{if strcmp($object.class, "window")==0
	{
		if $object.window.align&TOP
		{
			$y-WINDOW_YSIZE div 2
		}
		if $object.window.align&BOTTOM
		{
			$y+WINDOW_YSIZE div 2
		}
	}}}
	ret($y)
}
fn get_button_event($button)
{
	$x=get_global_x($button)
	$y=get_global_y($button)
	if $button.active
	{
		$do_it=0
		if EVT[EVT_KEY]==$button.keyboard_key
		{
			if EVT[EVT_TYPE]==EVT_BUTTONDOWN
			{
				$button.pressed=2
				if !$button.entered
				{
					$button.entered=2
				}
				if $button.main_event==EVT_BUTTONDOWN
				{
					$do_it=1
				}
			}
			if EVT[EVT_TYPE]==EVT_BUTTONUP
			{
				$button.pressed=0
				if $button.main_event==EVT_BUTTONUP
				{
					$do_it=1
				}
				else{if $button.entered==2
				{
					$button.entered=0
				}}
			}
		}
		if EVT[EVT_X]>=$x&&EVT[EVT_X]<$x+$button.width&&EVT[EVT_Y]>=$y&&EVT[EVT_Y]<$y+$button.height
		{
			if MOBILE||EVT[EVT_KEY]==$button.mouse_key
			{
				if EVT[EVT_TYPE]==EVT_MOUSEBUTTONDOWN||EVT[EVT_TYPE]==EVT_TOUCHBEGIN
				{
					$button.scancode=EVT[EVT_SCANCODE]
					$button.pressed=1
					$button.entered=1
					if $button.main_event==EVT_BUTTONDOWN
					{
						$do_it=1
					}
				}
				if EVT[EVT_TYPE]==EVT_MOUSEBUTTONUP||EVT[EVT_TYPE]==EVT_TOUCHEND&&EVT[EVT_SCANCODE]==$button.scancode
				{
					if $button.pressed
					{
						$button.pressed=0
						if $button.main_event==EVT_BUTTONUP
						{
							$do_it=1
						}
						else{if MOBILE
						{
							$button.entered=0
						}}
					}
					else{if MOBILE
					{
						$button.entered=0
					}}
				}
			}
			if EVT[EVT_TYPE]==EVT_MOUSEMOVE||EVT[EVT_TYPE]==EVT_TOUCHMOVE
			{
				$button.entered=1
			}
		}
		else{if EVT[EVT_TYPE]==EVT_TOUCHMOVE||EVT[EVT_TYPE]==EVT_MOUSEMOVE
		{
			if $button.pressed==2
			{
				$button.entered=2
			}
			else
			{
				$button.entered=0
				$button.pressed=0
			}
		}}
		if $do_it
		{
			if $button.type==BUTTON_SWITCH
			{
				$button.switch_state^1
			}
			$button.function($button, $button.arguments)
			if $button.type==BUTTON_SELECT
			{
				$button.selected=1
			}
			if MOBILE&&$button.entered==1&&EVT[EVT_TYPE]!=EVT_BUTTONUP||$button.entered==2&&$button.main_event==EVT_BUTTONUP
			{
				$button.entered=0
			}
		}
	}
}
fn draw_window($window)
{
	$x=get_global_x($window)
	$y=get_global_y($window)
	$border_alpha=255
	$title_alpha=128
	$body_alpha=64
	$transp=get_transp()
	if COLOR_THEME==THEME_DARK
	{
		fbox($x+1, $y+1, $window.width-2, 40, get_color(get_red($window.color)*$title_alpha div 255, get_green($window.color)*$title_alpha div 255, get_blue($window.color)*$title_alpha div 255))
	}
	else{if COLOR_THEME==THEME_LIGHT
	{
		fbox($x+1, $y+1, $window.width-2, 40, get_color($title_alpha+get_red($window.color)*$title_alpha div 256, $title_alpha+get_green($window.color)*$title_alpha div 256, $title_alpha+get_blue($window.color)*$title_alpha div 256))
	}}
	transp($transp*$body_alpha div 255)
	fbox($x+1, $y+42, $window.width-2, $window.height-43, $window.color)
	transp($transp)
	$a=0 while $a!=get_size($window.texts)
	{
		if $a==0
		{
			if COLOR_THEME==THEME_LIGHT
			{
				$window.texts[$a].color=get_color(get_red($window.color)*64 div 255, get_green($window.color)*64 div 255, get_blue($window.color)*64 div 255)
			}
			draw_text($window.texts[$a])
		}
		else{if $window.texts[$a]>=0
		{
			draw_text($window.texts[$a])
		}}
		$a+1
	}
	$a=0 while $a!=get_size($window.buttons)
	{
		if $window.buttons[$a]>=0
		{
			draw_button($window.buttons[$a])
		}
		$a+1
	}
	transp($transp*$border_alpha div 255)
	box($x, $y, $window.width-1, $window.height-1, $window.color)
	line($x, $y+41, $x+$window.width-1, $y+41, $window.color)
	transp($transp)
}
fn draw_text($text)
{
	$x=get_global_x($text)
	$y=get_global_y($text)
	t_scale($text.size, $text.size, 1)
	print($text.string, $x/$text.size, $y/$text.size, $text.color, $text.text_align, $text.width/$text.size)
	t_reset()
}
fn draw_button($button)
{
	$x=get_global_x($button)
	$y=get_global_y($button)
	$border_alpha=255
	$body_alpha=64
	$normal=0
	if $button.active
	{
		if $button.type==BUTTON_STANDARD
		{
			$normal=1
		}
		if $button.type==BUTTON_SWITCH
		{
			if $button.switch_state
			{
				$body_alpha=128
				if $button.pressed
				{
					$button_color=get_color(get_red($button.color)/255*128, get_green($button.color)/255*128, get_blue($button.color)/255*128)
				}
				else{if $button.entered
				{
					$button_color=get_color(get_red($button.color)/256*96+128, get_green($button.color)/256*96+128, get_blue($button.color)/256*96+128)
				}
				else
				{
					$button_color=get_color(get_red($button.color)/255*192, get_green($button.color)/255*192, get_blue($button.color)/255*192)
				}}
			}
			else
			{
				$normal=1
			}
		}
		if $button.type==BUTTON_SELECT
		{
			if $button.selected||$button.pressed
			{
				$normal=1
			}
			else
			{
				$border_alpha=0
				if $button.entered
				{
					$button_color=get_color(get_red($button.color)/256*128+128, get_green($button.color)/256*128+128, get_blue($button.color)/256*128+128)
				}
				else
				{
					$body_alpha=0
				}
			}
		}
		if $normal
		{
			if $button.pressed
			{
				$button_color=get_color(get_red($button.color)/255*128, get_green($button.color)/255*128, get_blue($button.color)/255*128)
			}
			else{if $button.entered
			{
				$button_color=get_color(get_red($button.color)/256*128+128, get_green($button.color)/256*128+128, get_blue($button.color)/256*128+128)
			}
			else
			{
				$button_color=$button.color
			}}
		}
	}
	else
	{
		$button_color=get_color(get_red($button.color)/256*128+128, get_green($button.color)/256*128+128, get_blue($button.color)/256*128+128)
	}
	$transp=get_transp()
	if $body_alpha!=0
	{
		transp($transp*$body_alpha div 255)
		fbox($x+1, $y+1, $button.width-2, $button.height-2, $button_color)
	}
	transp($transp)
	if COLOR_THEME==THEME_LIGHT
	{
		$button.title.color=get_color(get_red($button.color)*64 div 255, get_green($button.color)*64 div 255, get_blue($button.color)*64 div 255)
	}
	$button.title.width=$button.width-2
	draw_text($button.title)
	if $border_alpha!=0
	{
		transp($transp*$border_alpha div 255)
		box($x, $y, $button.width-1, $button.height-1, $button_color)
		transp($transp)
	}
}