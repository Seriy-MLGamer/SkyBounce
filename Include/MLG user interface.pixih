//"MLG user interface" library v1.0.0.
//(C) Серый MLGamer, 2021.
//MIT license.


BUTTON_STANDARD=0
BUTTON_SWITCH=1
BUTTON_SELECT=2
WINDOW_STANDARD=0
WINDOW_DIALOGUE=1
WINDOW_ALERT=2
WINDOW_FLAG_DRAGGABLE=0b1
WINDOW_FLAG_RESIZEABLE=0b10
WINDOW_FLAG_NOTITLE=0b100

fn new_button($x, $y, $width, $height, $type)
{
	$button=new()
	$button.x=$x
	$button.y=$y
	$button.width=$width
	$button.height=$height
	$button.type=$type

	$button.active=1
	$button.entered=0
	$button.pressed=0
	if $type==BUTTON_SWITCH
	{
		$button.switch_state=0
	}
	if $type==BUTTON_SELECT
	{
		$button.selected=0
	}
	if !MOBILE
	{
		$button.mouse_key=KEY_MOUSE_LEFT
		$button.keyboard_key=0
	}
	$button.main_event=EVT_BUTTONUP
	ret($button)
}
fn new_window($title, $x, $y, $width, $height, $type, $flags)
{
	$window=new()
	$window.title=$title
	$window.x=$x
	$window.y=$y
	$window.width=$width
	$window.height=$height
	$window.type=$type
	$window.flags=$flags

	$window.buttons=new(1, 1, INT)
	clean($window.buttons)
	$window.texts=new(1, 1, INT)
	clean($window.texts)
	$window.images=new(1, 1, INT)
	clean($window.images)
	if $type==WINDOW_DIALOGUE
	{
		$ok=new_button()
	}
}
fn bind_button($window, $button)
{
	if $window>0
	{
		$button.window=$window
		$a=0 while $a!=get_size($window.buttons)&&$window.buttons[$a]!=0
		{
			$a+1
		}
		if $a==get_size($window.buttons)
		{
			resize($window.buttons, get_size($window.buttons)+1)
		}
		$window.buttons[$a]=$button
	}
}
fn get_button_event($button, $function, $arguments)
{
	$x=$button.x
	$y=$button.y
	if $button.window>0
	{
		$x+$button.window.x+$button.window.width div 2
		$y+$button.window.y+$button.window.height div 2
	}
	if $button.active
	{
		$do_it=0
		if EVT[EVT_KEY]==$button.keyboard_key
		{
			if EVT[EVT_TYPE]==EVT_BUTTONDOWN
			{
				$button.pressed=2
				if !$button.entered
				{
					$button.entered=2
				}
				if $button.main_event==EVT_BUTTONDOWN
				{
					$do_it=1
				}
			}
			if EVT[EVT_TYPE]==EVT_BUTTONUP
			{
				$button.pressed=0
				if $button.main_event==EVT_BUTTONUP
				{
					$do_it=1
				}
				else{if $button.entered==2
				{
					$button.entered=0
				}}
			}
		}
		if EVT[EVT_X]>=$x&&EVT[EVT_X]<$x+$button.width&&EVT[EVT_Y]>=$y&&EVT[EVT_Y]<$y+$button.height
		{
			if MOBILE||EVT[EVT_KEY]==$button.mouse_key
			{
				if EVT[EVT_TYPE]==EVT_MOUSEBUTTONDOWN||EVT[EVT_TYPE]==EVT_TOUCHBEGIN
				{
					$button.scancode=EVT[EVT_SCANCODE]
					$button.pressed=1
					$button.entered=1
					if $button.main_event==EVT_BUTTONDOWN
					{
						$do_it=1
					}
				}
				if EVT[EVT_TYPE]==EVT_MOUSEBUTTONUP||EVT[EVT_TYPE]==EVT_TOUCHEND&&EVT[EVT_SCANCODE]==$button.scancode
				{
					if $button.pressed
					{
						$button.pressed=0
						if $button.main_event==EVT_BUTTONUP
						{
							$do_it=1
						}
						else{if MOBILE
						{
							$button.entered=0
						}}
					}
					else{if MOBILE
					{
						$button.entered=0
					}}
				}
			}
			if EVT[EVT_TYPE]==EVT_MOUSEMOVE||EVT[EVT_TYPE]==EVT_TOUCHMOVE
			{
				$button.entered=1
			}
		}
		else{if EVT[EVT_TYPE]==EVT_TOUCHMOVE||EVT[EVT_TYPE]==EVT_MOUSEMOVE
		{
			if $button.pressed==2
			{
				$button.entered=2
			}
			else
			{
				$button.entered=0
				$button.pressed=0
			}
		}}
		if $do_it
		{
			if $button.type==BUTTON_SWITCH
			{
				$button.switch_state^1
			}
			$function($button, $arguments)
			if $button.type==BUTTON_SELECT
			{
				$button.selected=1
			}
			if MOBILE&&$button.entered==1&&EVT[EVT_TYPE]!=EVT_BUTTONUP||$button.entered==2&&$button.main_event==EVT_BUTTONUP
			{
				$button.entered=0
			}
		}
	}
}
fn draw_button($button, $color, $button_text, $text_align, $text_scale)
{
	$x=$button.x
	$y=$button.y
	if $button.window>0
	{
		$x+$button.window.x+$button.window.width div 2
		$y+$button.window.y+$button.window.height div 2
	}
	$border_alpha=255
	$body_alpha=64
	$normal=0
	if $button.active
	{
		if $button.type==BUTTON_STANDARD
		{
			$normal=1
		}
		if $button.type==BUTTON_SWITCH
		{
			if $button.switch_state
			{
				$body_alpha=128
				if $button.pressed
				{
					$button_color=get_color(get_red($color)/255*128, get_green($color)/255*128, get_blue($color)/255*128)
					$text_color=get_color(get_red($color)/255*64, get_green($color)/255*64, get_blue($color)/255*64)
				}
				else{if $button.entered
				{
					$button_color=get_color(get_red($color)/256*96+128, get_green($color)/256*96+128, get_blue($color)/256*96+128)
					$text_color=get_color(get_red($color)/255*128, get_green($color)/255*128, get_blue($color)/255*128)
				}
				else
				{
					$button_color=get_color(get_red($color)/255*192, get_green($color)/255*192, get_blue($color)/255*192)
					$text_color=get_color(get_red($color)/255*128, get_green($color)/255*128, get_blue($color)/255*128)
				}}
			}
			else
			{
				$normal=1
			}
		}
		if $button.type==BUTTON_SELECT
		{
			if $button.selected|$button.pressed
			{
				$normal=1
			}
			else
			{
				$border_alpha=0
				if $button.entered
				{
					$button_color=get_color(get_red($color)/256*128+128, get_green($color)/256*128+128, get_blue($color)/256*128+128)
					$text_color=get_color(get_red($color)/255*64, get_green($color)/255*64, get_blue($color)/255*64)
				}
				else
				{
					$body_alpha=0
					$text_color=BLACK
				}
			}
		}
		if $normal
		{
			if $button.pressed
			{
				$button_color=get_color(get_red($color)/255*128, get_green($color)/255*128, get_blue($color)/255*128)
				$text_color=get_color(get_red($color)/255*64, get_green($color)/255*64, get_blue($color)/255*64)
			}
			else{if $button.entered
			{
				$button_color=get_color(get_red($color)/256*128+128, get_green($color)/256*128+128, get_blue($color)/256*128+128)
				$text_color=get_color(get_red($color)/255*128, get_green($color)/255*128, get_blue($color)/255*128)
			}
			else
			{
				$button_color=$color
				$text_color=get_color(get_red($color)/255*128, get_green($color)/255*128, get_blue($color)/255*128)
			}}
		}
	}
	else
	{
		$button_color=get_color(get_red($color)/256*128+128, get_green($color)/256*128+128, get_blue($color)/256*128+128)
		$text_color=get_color(get_red($color)/256*64+128, get_green($color)/256*64+128, get_blue($color)/256*64+128)
	}
	$transp=get_transp()
	if $body_alpha!=0
	{
		transp($transp/255*$body_alpha)
		fbox($x+1, $y+1, $button.width-2, $button.height-2, $button_color)
	}
	$text_x=$x+$button.width/2
	$text_y=$y+$button.height/2
	if ($text_align&RIGHT)==RIGHT
	{
		$text_x+($button.width/2-2)
	}
	if ($text_align&BOTTOM)==BOTTOM
	{
		$text_y+($button.height/2-2)
	}
	if ($text_align&LEFT)==LEFT
	{
		$text_x+(-$button.width/2+1)
	}
	if ($text_align&TOP)==TOP
	{
		$text_y+(-$button.height/2+1)
	}
	transp($transp)
	//adv_print($button_text, $text_x, $text_y, 1, $text_color, 1, #000000, 0, $text_align, $width-2) //Вот из-за чего нужно подключить библиотеку "MLG advanced text tools.pixilib".
	t_scale($text_scale, $text_scale, 1)
	print($button_text, $text_x/$text_scale, $text_y/$text_scale, $text_color, $text_align, ($button.width-2)/4)
	t_reset()
	if $border_alpha!=0
	{
		transp($transp/255*$border_alpha)
		box($x, $y, $button.width-1, $button.height-1, $button_color)
		transp($transp)
	}
}